<?php 
$modulesPath = 'sites/all/modules/nodemerger/';
include_once($modulesPath. 'inc/function.php');

/* ================================================================================
module setting on admin
================================================================================= */
// menu seting user to premium
function nodemerger_menu() {
	$items = array();
	$items['admin/settings/node-merger'] = array(
		'title' => 'Node Merger',
		'description' => 'Setting page for to include node inside node',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('nodemerger_admin'),
		'access arguments' => array('administer users'),
		'type' => MENU_NORMAL_ITEM,
	);
	return $items;
}

function nodemerger_admin() {
	$form = array();
	
	$desc = "For each line, type:
		<br />Main content type|main page field name|component page|render type; carousel or gallery|image style name|panel color";

	$form['nodemerger_pairing'] = array(
		'#type' => 'textarea',
		'#title' => t('Pair of main page and component'),
		'#default_value' => variable_get('nodemerger_pairing', 'villa|field_photo_gallery|photo_gallery|gallery|icon|panel-default'),
		'#description' => t($desc),
		'#required' => TRUE
	);

	$form['nodemerger_label'] = array(
		'#type' => 'textarea',
		'#title' => t('Panels name'),
		'#default_value' => variable_get('nodemerger_label', 'villa|field_photo_gallery|%1$s gallery'),
		'#description' => t('For each line, type: main page machine name|field name|Label text'),
		'#required' => TRUE
	);

	$form['nodemerger_component_list'] = array(
		'#type' => 'textarea',
		'#title' => t('Component content type'),
		'#default_value' => variable_get('nodemerger_component_list', "photo-gallery\npromo-carousel"),
		'#description' => t('For each line, type component url name'),
		'#required' => TRUE
	);

	$form['nodemerger_bootstrap_form_list'] = array(
		'#type' => 'textarea',
		'#title' => t('All form using bootstrap style'),
		'#default_value' => variable_get('nodemerger_bootstrap_form_list', "photo-gallery\npromo-carousel\npromo-landing\nvilla"),
		'#description' => t('For each line, type component url name'),
		'#required' => TRUE
	);

	return system_settings_form($form);
}

/* ================================================================================
hook preprocess field
================================================================================= */
function nodemerger_preprocess_field(&$vars) {
	global $base_url;
	$settings = explode("\n", variable_get('nodemerger_pairing', 
		'things_to_do|field_type_of_block|types_of_block|carousel|carousel'));
	
	$labels = explode("\n", variable_get('nodemerger_label', 'things_to_do|field_type_of_block|Types of %1$s'));
	$labelPairs = array();

	foreach ($labels as $label) { // foreach component type
		$arr = explode('|', $label);
		$labelPairs[$arr[0]][str_replace("_", '-', $arr[1])] = $arr[2];
	}

	//kpdebug($vars);
	foreach ($settings as $setup) { // foreach component type
		$setups = explode('|', $setup);
		$setupCssName = str_replace("_", '-', $setups[1]);

		if(trim($vars['element']['#bundle']) != trim($setups[0]))
			continue;

		if(trim($setupCssName) == trim($vars['field_name_css'])) { // if in correct field main node
			$newVal = $nav = $content = $carousel = $block = "";

			// open node with this ID
			$cids = $vars['items'][0]['#markup'];
			if($cids) {
				$cids = explode(',', $cids);
				shuffle($cids);
				$active = 'active';
				$i = 0;
				$odd = 'odd';
				$moreLink = "";

				/** / get url alias if list
				if($setups[3] == 'list') {
					$urlAlias = getUrlAlias($cids);
				}
				/**/

				foreach ($cids as $cid) { // for each component item
					$cobj = node_load($cid);
					
					//kpdebug($cobj, 'component object');

					// hide property area for carousel
					if($cobj->type == 'featured_property')
						unset($cobj->field_property_location);
					
					// if node active
					if($cobj && $cobj->status == 1) {

						// get taxo name for area
						if(isset($cobj->field_area)) {
							$sql = db_select('taxonomy_term_data', 'ttd');
							$sql->fields('ttd', array('name'));
							$sql->condition('ttd.tid', getCurrent($cobj->field_area, 'tid'));
							$rs = $sql->execute();
							$r = $rs->fetchObject();
							$taxoName = $r->name;
						}

						// get taxo name for property area
						if(isset($cobj->field_property_location)) {
							$sql = db_select('taxonomy_term_data', 'ttd');
							$sql->fields('ttd', array('name'));
							$sql->condition('ttd.tid', getCurrent($cobj->field_property_location,'tid'));
							$rs = $sql->execute();
							$r = $rs->fetchObject();
							$taxoName = $r->name;
						}

						// get img url
						$imgStyleType = "";
						if(kpIsMobile())
							$imgStyleType = in_array(trim($setups[4]), array('carousel', 'large')) ? '_mobile' : "";
						
						$imgUrl = "";
						if(isset($cobj->field_photo))
							$imgUrl = image_style_url(trim($setups[4]) . $imgStyleType, getCurrent($cobj->field_photo, 'uri'));

						// switch component type
						switch ($setups[3]) {
							case 'carousel':
							case 'carousel-content':
								$textClass = 'carousel-caption';
								$itemClass = $itemImgPrefix = $itemImgSuffix = "";
								if($setups[3] == 'carousel-content') {
									$textClass = 'col-md-6 col-sm-8 description';
									$itemClass = ' row';
									$itemImgPrefix = '<div class="col-md-6 col-sm-4 max-400">';
									$itemImgSuffix = '</div>';
								}

								$carTitleTag = $setups[3] == 'carousel' ? 'strong' : 'h2';
								$carTitle = isset($cobj->field_description_title) ? getCurrent($cobj->field_description_title, 'safe_value') : $cobj->title;

								$carousel .= '<li data-target="#'. $setupCssName .'" data-slide-to="'. $i .'" class="'. $active .'">&nbsp;</li>';

								$content .= '
									<div class="item '. $active . $itemClass .'">';
										$content .= $itemImgPrefix;

										if(isset($cobj->field_photo)) {
											$content .= '<img src="'. $imgUrl .'" alt="'. $carTitle .'" />';
										}

										if(isset($cobj->field_media_gallery)) {
											$width = 480; $height = 360;
											if(kpIsMobile()) {$width = 250; $height = 190;}
											$content .= '<iframe width="'. $width .'" height="'. $height .'" src="//www.youtube.com/embed/'. getCurrent($cobj->field_media_gallery, 'safe_value') .'" frameborder="0" allowfullscreen></iframe>';	
										}

										$content .= $itemImgSuffix;


										$content .= '
										<div class="'. $textClass.'">';

											if(!isset($cobj->field_media_gallery)) {
												$content .= '<'. $carTitleTag .' class="title">'. $carTitle .'</'. $carTitleTag .'>';
											}

											if(isset($cobj->field_area))
												$content .= '<h3>'. $taxoName .'</h3>';	

											if(isset($cobj->field_property_location))
												$content .= '<h3>'. $taxoName .'</h3>';			

											if(isset($cobj->body))
												$content .= '<p>'. getCurrent($cobj->body, 'safe_value') .'</p>';

											if(isset($cobj->field_read_more_link) && !empty($cobj->field_read_more_link))
												$content .= '<a href="'. getCurrent($cobj->field_read_more_link, 'safe_value') .'" class="btn btn-primary">more here</a>';

											$content .= '
										</div>
									</div>
								';
								$i++;
								$active = "";
							break;
							
							case 'block':
								$panelTitle = "";
								if(isset($cobj->field_description_title))
									$panelTitle = getCurrent($cobj->field_description_title, 'safe_value');

								if($odd) { // set open row
									$block .= '<div class="row">';
								}

								// set col-md-6
								$block .= '<div class="col-md-6 col-sm-6">
									<div class="panel panel-primary"><div class="panel-body block">
									<div class="row">
										<div class="col-xs-4 fullimg">
											<img src="'. $imgUrl .'" alt="'. $panelTitle .'" />
										</div>
										<div class="col-xs-8">';
											if(isset($cobj->field_description_title))
												$block .= '<h2>'. $panelTitle .'</h2>';
											if($cobj->body)
												$block .= '<p>'. getCurrent($cobj->body, 'safe_value') .'</p>';
											$block .= '
										</div>
									</div>
									</div></div>
								</div>';

								if($odd == "") { // set close row
									$block .= '</div>';
								}

								$odd = ($odd == 'odd') ? "" : 'odd';
							break;

							case 'list':
								if($i == 0) { // set open row
									$newVal .= '<div class="row">';
								}

								// set col-md-4
								$newVal .= '<div class="col-sm-4">';
									if($cobj->title)
										$newVal .= '<strong>'. $cobj->title .'</strong><br />';

									$newVal .= '<p>'. getCurrent($cobj->field_date, 'safe_value') .'<br />';
									
									$newVal .= '<a href="#event-'. $cid /* getUrl($cid, $urlAlias)*/ .'" class="btn btn-primary btn-sm colorbox">view detail</a></p>';
									$newVal .= '<div class="hide">
										<p class="minPopUp" id="event-'. $cid .'">
											<strong>'. $cobj->title .'</strong><br />
											<em>'. getCurrent($cobj->field_date, 'safe_value') .'</em><br />
											'. getCurrent($cobj->body, 'safe_value') .'</p></div>
								</div>';

								$i++; if($i == 3) {$i = 0;}

								if($i == 0) { // set close row
									$newVal .= '</div>';
								}

								$active = "";
								$moreLink = '<a class="pull-right" href="'. $base_url .'/event.html" title="see all">see all</a>';
							break;
							
							default:
								$nav .= '<li class="'. $active .'"><a href="#'. $setups[1] .'-'. $cobj->nid .'" data-toggle="tab">'. $cobj->title .' <span class="glyphicon glyphicon-chevron-right"></span></a></li>';

								$panelTitle = "";
								if(isset($cobj->field_description_title))
									$panelTitle = getCurrent($cobj->field_description_title, 'safe_value');

								$content .= '<div class="tab-pane '. $active .'" id="'. $setups[1] .'-'. $cobj->nid .'">
									<div class="row">
										<div class="col-sm-4 max-240">
											<img src="'. $imgUrl .'" alt="'. $panelTitle .'" />
										</div>
										<div class="col-sm-8 description">';
											// title, body, field_area, field_description_title, field_photo, field_read_more_link
											if(isset($cobj->field_description_title))
												$content .= '<h2>'. $panelTitle .'</h2>';

											if(isset($cobj->field_area)) 
												$content .= '<h3>'. $taxoName .'</h3>';			

											if($cobj->body)
												$content .= '<p>'. getCurrent($cobj->body, 'safe_value') .'</p>';

											if(isset($cobj->field_read_more_link))
												$content .= '<a href="'. getCurrent($cobj->field_read_more_link, 'safe_value') .'" class="btn btn-primary">more here</a>';

											$content .= '
										</div>
									</div>
								</div>';

								$active = "";
							break;
						}
					}
				}

				// tutup block kalo ganjil
				if(($block != '') && ($odd == '')) {
					$block .= '</div>';
				}

				// tutup row list kalo gak komplit 3
				if(($setups[3] == 'list') && ($i > 0)) {
					$newVal .= '</div>';
				}
			}

			// set panel color
			//kpdebug($setups);
			$panelType = isset($setups[5]) ? trim($setups[5]) : 'panel-default';

			// include tab
			if($nav != "") {
				$newVal = '
					<div class="row">
						<div class="col-md-3">
							<ul class="nav nav-pills nav-stacked">
							  '. $nav .'
							</ul>
						</div>
						<div class="col-md-9">
							<div class="tab-content">
							  '. $content .'
							</div>
						</div>
					</div>
				';
			}

			// include carousel
			if($carousel != "") {
				$autoSlide  = ' data-ride="carousel"';
				if(in_array($setups[1], array('field_media_gallery', 'field_feature_content')))
					$autoSlide  = "";
				$newVal = '
					<div id="'. $setupCssName .'" class="carousel slide"'. $autoSlide .'>
						<ol class="carousel-indicators">
							'. $carousel .'
						</ol>

						<div class="carousel-inner">
							'. $content .'
						</div>

						<a class="left carousel-control" href="#'. $setupCssName .'" data-slide="prev">
							<span class="glyphicon glyphicon-chevron-left"></span>
						</a>

						<a class="right carousel-control" href="#'. $setupCssName .'" data-slide="next">
							<span class="glyphicon glyphicon-chevron-right"></span>
						</a>
					</div>
				';

				if($setups[1] == 'field_carousel') // special header carousel
					$newVal .= '<h1>'. $vars['element']['#object']->title .'</h1>';
			}

			// include block and update value
			if($block != "") {
				$vars['items'][0]['#markup'] = $block;
			}

			// update value
			if($newVal != "") {
				// set panel if label panel exist
				if(isset($labelPairs[$setups[0]][$setupCssName])) {
					$panelTab = ($nav != "") ? ' tab' : "";
					$newVal = '
						<div class="panel'. $panelTab .' '. $panelType .' '. $setups[3] .'">
						  <div class="panel-heading">
						    <strong class="panel-title">'. sprintf($labelPairs[$setups[0]][$setupCssName], $vars['element']['#object']->title) .'</strong> '. $moreLink .'
						  </div>
						  <div class="panel-body">'. $newVal .'</div>
						</div>
					';
				}

				$vars['items'][0]['#markup'] = $newVal;
			}
		}
	}
	//unset($vars['element']);
	//kpdebug($vars, 'vars');
}

/* ================================================================================
alter form, add dropdown component to include in node
================================================================================= */
function nodemerger_form_alter(&$form, &$form_state, $form_id) {
	
	// get node merger setting
	$settings = explode("\n", variable_get('nodemerger_pairing', 
		'things_to_do|field_type_of_block|types_of_block|carousel|carousel'));

	// do action on macth to node merger setting
	foreach ($settings as $setup) {
		$setups = explode('|', $setup);
		if($form_id == $setups[0] .'_node_form') {
			// get component node
			$tob = array();
			try{
				$sql = db_select('node', 'n');
				$sql->fields('n', array('nid','title'));
				$sql->condition('n.type', trim($setups[2]));
				$sql->orderby('title', 'ASC');

				// get taxonomy name if featured-property
				if(trim($setups[2]) == 'featured_property') {
					$sql->join('taxonomy_index', 'ti', 'ti.nid = n.nid');

					$sql->join('taxonomy_term_data', 'ttd', 'ttd.tid = ti.tid');
					$sql->condition('ttd.vid', 7); // 7 = taxonomy property
					$sql->fields('ttd', array('name'));
				}

				$rs = $sql->execute();
				while ($r = $rs->fetchObject()) {
					$area = isset($r->name) ? $r->name .' - ' : "";
					$tob[] = '<option value="'. $r->nid .'">'. $area . $r->title .'</option>';
				}
			} catch(Exception $e) {
				//kpdebug($e);
			}

			// generate dropdown html
			$form[$setups[1]]['und']['#prefix'] = '<div class="panel panel-default"><div class="panel-heading">';
			$form[$setups[1]]['und']['#suffix'] = '</div>
				<div class="componentList panel-body">
					<div class="included">&nbsp;</div>
					<select class="listCon form-control"><option value="0">Available component to include</option>';
						$form[$setups[1]]['und']['#suffix'] .= implode("\n", $tob);
					$form[$setups[1]]['und']['#suffix'] .= '</select>
				</div>
			</div>'; 
		}
	}
}

/* ================================================================================
add css and js
================================================================================= */
function nodemerger_init() {
	//kpdebug($_GET['q']);

	// add css and js ke several node admin aja
	$q = explode('/', $_GET['q']);
	$q[2] = isset($q[2]) ? $q[2] : '';

	// get component list and register component for js purpose
	$components = explode("\n", variable_get('nodemerger_component_list', ''));
	$inlineJs = sprintf('var comp = [\'%1$s\'];', implode("', '", $components));

	// get page using bootstrap style
	$comNodes = explode("\n", variable_get('nodemerger_bootstrap_form_list', ''));

	if($q[0] == 'node' && ($q[2] == 'edit' || in_array($q[2], $comNodes))) {
		drupal_add_css(drupal_get_path('module', 'nodemerger') . '/css/bootstrap.min.css');
		drupal_add_css(drupal_get_path('module', 'nodemerger') . '/css/jquery.ui.core.min.css');
		drupal_add_css(drupal_get_path('module', 'nodemerger') . '/css/jquery.ui.theme.min.css');
		drupal_add_css(drupal_get_path('module', 'nodemerger') . '/css/jquery.ui.datepicker.min.css');
		drupal_add_css(drupal_get_path('module', 'nodemerger') . '/css/nodemerger.css');

		drupal_add_js($inlineJs, 'inline');

		drupal_add_js(drupal_get_path('module', 'nodemerger') . '/js/jquery-1.10.2.min.js');
		drupal_add_js(drupal_get_path('module', 'nodemerger') . '/js/bootstrap.min.js');
		drupal_add_js(drupal_get_path('module', 'nodemerger') . '/js/jquery.ui.core.min.js');
		drupal_add_js(drupal_get_path('module', 'nodemerger') . '/js/jquery.ui.widget.min.js');
		drupal_add_js(drupal_get_path('module', 'nodemerger') . '/js/jquery.ui.datepicker.min.js');
		drupal_add_js(drupal_get_path('module', 'nodemerger') . '/js/nodemerger.js');
	}
}

/* ================================================================================
helper function - get all url alias
================================================================================= */
function getUrlAlias($ids) {
	$o = $nodes = array();
	foreach ($ids as $id) {
		$nodes[$id] = 'node/'. $id;
	}
	try{
		$sql = db_select('url_alias', 'ua');
		$sql->fields('ua', array('alias', 'source'));
		$sql->condition('ua.source', $nodes, 'IN');

		$rs = $sql->execute();
		while ($r = $rs->fetchObject()) {
			$o[$r->source] = $r->alias;
		}
	} catch(Exception $e) {
		//kpdebug($e);
	}

	return $o;
}

/* ================================================================================
helper function - get url node
================================================================================= */
function getUrl($id, $list) {
	global $base_url;
	if(isset($list['node/'. $id]))
		return $base_url .'/'. $list['node/'. $id];

	return $base_url .'/node/'. $id;
}

function getCurrent($var, $val) {
	if(isset($var) && is_array($var) && !empty($var)) {
		if(is_array(current($var))) {
			$cur = current(current($var));
			return $cur[$val];
		}
	}
}

